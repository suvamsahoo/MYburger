{"version":3,"sources":["hoc/Auxx.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","store/actions.js","store/reducer.js","index.js"],"names":["Aux","props","children","Logo","className","style","height","src","burgerLogo","NavigationItem","to","link","exact","NavigationItems","DrawerToggle","onClick","clicked","Toolbar","drawerToggleClicked","Backdrop","show","SideDrawer","attachedClasses","open","closedSideDrawer","join","Layout","sideDrawerClosedHandler","setState","showSideDrawer","sideDrawerToggleHandler","prevState","state","this","Component","BurgerIngredient","ingredient","type","Burger","IngredientsArray","Object","keys","IngredientsObj","map","IngredientKey","Array","_","index","reduce","arr","el","concat","length","BuildControl","Label","added","removed","disabled","disabledBTN","controls","label","BuildControls","price","toFixed","ctr","ingredientAdded","ingredientRemoved","IsPurchasable","ordered","Modal","nextProps","nextState","console","log","Show","modalClosed","transform","opacity","Button","btnType","OrderSummary","IngredientSummary","ingredients","igKey","textTransform","TP","purchaseCancled","purchaseContinued","Spinner","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","INGREDIENT_PRICES","salad","cheese","meat","bacon","updatePurchaseState","updatedIngredientsObject","SUM","ingredientKey","sum","ele","purchasable","addIngredientHandler","updatedCounted","updatedIngredients","newPrice","totalPrice","removeIngredientHandler","oldCount","purchaseHandler","purchasing","purchaseCancleHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","history","pathname","search","loading","axios_orders","get","then","data","catch","disabledInfo","key","Order_Summary","burger","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","Input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","entries","param","path","match","render","Order","ingredientName","amount","ingredientOutput","ig","fontWeight","display","border","padding","Number","parseFloat","Orders","orders","fetchedOrders","err","App","component","BurgerBuilder","ADD_INGREDIENTS","REMOVE_INGREDIENTS","initialState","reducer","action","actionTypes","store","createStore","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f304186d.chunk.js","sourcesContent":["const Aux = (props) => props.children;\r\n\r\nexport default Aux;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from \"react\";\r\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\r\nimport \"./Logo.css\";\r\n\r\nconst Logo = (props) => {\r\n  return (\r\n    <div className='Logo' style={{height: props.height}}>\r\n      <img src={burgerLogo}></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./NavigationItem.css\";\r\n\r\nconst NavigationItem = (props) => {\r\n  return (\r\n    <li className=\"NavigationItem\">\r\n      <NavLink to={props.link} exact={props.exact}>{props.children}</NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NavigationItem;\r\n","import React from \"react\";\r\nimport \"./NavigationItems.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst NavigationItems = (props) => {\r\n  return (\r\n    <ul className=\"NavigationItems\">\r\n      <NavigationItem link='/' exact>Burger Builder</NavigationItem>\r\n      <NavigationItem link='/orders'>Orders</NavigationItem>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavigationItems;\r\n","import React from \"react\";\r\nimport \"./DrawerToggle.css\";\r\n\r\nconst DrawerToggle = (props) => {\r\n  return (\r\n    <div className=\"DrawerToggle\" onClick={props.clicked}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerToggle;\r\n","import React from \"react\";\r\nimport \"./Toolbar.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst Toolbar = (props) => {\r\n  return (\r\n    <>\r\n      <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className=\"toolbarLogo\">\r\n          <Logo />\r\n        </div>\r\n\r\n        <nav className='DesktopOnly'>\r\n          <NavigationItems />\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport \"./Backdrop.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null;\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport \"./SideDrawer.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Aux from \"../../../hoc/Auxx\";\r\n\r\nconst SideDrawer = (props) => {\r\n  let attachedClasses = [\"SideDrawer\", \"Close\"];\r\n  if (props.open === true) {\r\n    attachedClasses = [\"SideDrawer\", \"Open\"];\r\n  }\r\n\r\n  return (\r\n    <Aux>\r\n      <Backdrop show={props.open} clicked={props.closedSideDrawer} />\r\n      <div className={attachedClasses.join(\" \")}>\r\n        <div className=\"sideDrawerLogo\">\r\n          <Logo />\r\n        </div>\r\n\r\n        <nav>\r\n          <NavigationItems />\r\n        </nav>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxx\";\r\nimport \"./Layout.css\";\r\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../Navigation/SideDrawer/SideDrawer\";\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showSideDrawer: false,\r\n    };\r\n  }\r\n\r\n  sideDrawerClosedHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  };\r\n  // sideDrawerToggleHandler = () => {\r\n  //   this.setState({ showSideDrawer: !this.state.showSideDrawer });\r\n  // };\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { showSideDrawer: !prevState.showSideDrawer};\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n        <SideDrawer\r\n          open={this.state.showSideDrawer}\r\n          closedSideDrawer={this.sideDrawerClosedHandler}\r\n        />\r\n        <main className=\"content\">{this.props.children}</main>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport \"./BurgerIngredient.css\";\r\nimport PropTypes from \"prop-types\"; //validate the prop types of your React properties\r\n\r\nconst BurgerIngredient = (props) => {\r\n  let ingredient = null;\r\n\r\n  switch (props.type) {\r\n    case \"bread-bottom\":\r\n      ingredient = <div className=\"BreadBottom\"></div>;\r\n      break;\r\n\r\n    case \"bread-top\":\r\n      ingredient = (\r\n        <div className=\"BreadTop\">\r\n          <div className=\"Seeds1\"></div>\r\n          <div className=\"Seeds1\"></div>\r\n        </div>\r\n      );\r\n      break;\r\n\r\n    case \"meat\":\r\n      ingredient = <div className=\"Meat\"></div>;\r\n      break;\r\n\r\n    case \"cheese\":\r\n      ingredient = <div className=\"Cheese\"></div>;\r\n      break;\r\n\r\n    case \"bacon\":\r\n      ingredient = <div className=\"Bacon\"></div>;\r\n      break;\r\n\r\n    case \"salad\":\r\n      ingredient = <div className=\"Salad\"></div>;\r\n      break;\r\n\r\n    default:\r\n      ingredient = null;\r\n  }\r\n\r\n  return ingredient;\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\";\r\nimport \"./Burger.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n\r\nconst Burger = (props) => {\r\n  //transformed Object to Array-:\r\n  let IngredientsArray = Object.keys(props.IngredientsObj)\r\n    .map((IngredientKey) => {\r\n      return [...Array(props.IngredientsObj[IngredientKey])].map((_, index) => {\r\n        return (\r\n          <BurgerIngredient key={IngredientKey + index} type={IngredientKey} />\r\n        );\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n\r\n  if (IngredientsArray.length === 0) {\r\n    IngredientsArray = <p>-: Please start adding ingredients :-</p>;\r\n  }\r\n\r\n  //console.log(props.IngredientsObj); //{salad: 1, bacon: 1, cheese: 2, meat: 2}\r\n  //console.log(Object.keys(props.IngredientsObj)); //[\"salad\", \"bacon\", \"cheese\", \"meat\"]\r\n  //console.log(IngredientsArray);\r\n\r\n  return (\r\n    <div className=\"Burger\">\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {/* <BurgerIngredient type=\"cheese\" />\r\n      <BurgerIngredient type=\"meat\" /> */}\r\n      {IngredientsArray}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport \"./BuildControl.css\";\r\n\r\nconst BuildControl = (props) => {\r\n  return (\r\n    <div className=\"BuildControl\">\r\n      <div className=\"Label\">{props.Label}</div>\r\n      <button\r\n        className=\"More\"\r\n        onClick={props.added}\r\n      >\r\n        More\r\n      </button>\r\n      <button\r\n        className=\"Less\"\r\n        onClick={props.removed}\r\n        disabled={props.disabledBTN}\r\n      >\r\n        Less\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControl;\r\n","import React from \"react\";\r\nimport \"./BuildControls.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\nconst BuildControls = (props) => {\r\n  return (\r\n    <div className=\"BuildControls\">\r\n      <p>\r\n        Current Price: <strong>₹{props.price.toFixed(2)}</strong>\r\n      </p>\r\n\r\n      {controls.map((ctr) => (\r\n        <BuildControl\r\n          key={ctr.label}\r\n          Label={ctr.label}\r\n          added={() => props.ingredientAdded(ctr.type)}\r\n          removed={() => props.ingredientRemoved(ctr.type)}\r\n          disabledBTN={props.disabled[ctr.type]}\r\n        />\r\n      ))}\r\n\r\n      <button\r\n        className=\"OrderButton\"\r\n        disabled={!props.IsPurchasable}\r\n        onClick={props.ordered}\r\n      >\r\n        ORDER NOW\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControls;\r\n","import React, { Component } from \"react\";\r\nimport \"./Modal.css\";\r\nimport \"../../../hoc/Auxx\";\r\nimport Aux from \"../../../hoc/Auxx\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children; //return boolean value\r\n  }\r\n  componentDidUpdate() {\r\n    console.log(\"Model updated!!\");\r\n  }\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Backdrop Show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div\r\n          className=\"Modal\"\r\n          style={{\r\n            //if props.show will true then \"translateY(0)\" else \"translateY(-100vh)\"\r\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n            opacity: this.props.show ? \"1\" : \"0\",\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport './Button.css'\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <>\r\n      <button disabled={props.disabled} onClick={props.clicked} className={[\"Button\", props.btnType].join(' ')}>{props.children}</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../../hoc/Auxx\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nclass OrderSummary extends Component {\r\n  componentDidUpdate(){\r\n    console.log(\"order updated!!\");\r\n  }\r\n  render() {\r\n    const IngredientSummary = Object.keys(this.props.ingredients).map((igKey) => {\r\n      return (\r\n        <li key={igKey}>\r\n          <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>-:\r\n          {this.props.ingredients[igKey]}\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <Aux>\r\n        <h3>Your Order-:</h3>\r\n        <p>A delicious burger with the following ingredients-: </p>\r\n        <ul>{IngredientSummary}</ul>\r\n        <p>\r\n          <strong>Total Price: ₹{this.props.TP.toFixed(2)}</strong>\r\n        </p>\r\n        <p>Continue to Checkout?</p>\r\n        <Button clicked={this.props.purchaseCancled} btnType=\"Danger\">\r\n          CANCEL\r\n        </Button>\r\n        <Button clicked={this.props.purchaseContinued} btnType=\"Success\">\r\n          CONTINUE\r\n        </Button>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderSummary;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"loader\">Loading...</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Aux from \"../Auxx\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return class extends Component {\r\n    state = {\r\n      error: null,\r\n    };\r\n    componentWillMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use((req) => {\r\n        this.setState({ error: null });\r\n        return req;\r\n      });\r\n      this.resInterceptor = axios.interceptors.response.use(\r\n        (res) => res,\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n      axios.interceptors.request.eject(this.reqInterceptor);\r\n      axios.interceptors.response.eject(this.resInterceptor);\r\n    }\r\n\r\n    errorConfirmedHandler = () => {\r\n      this.setState({ error: null });\r\n    };\r\n    render() {\r\n      return (\r\n        <Aux>\r\n          <Modal\r\n            show={this.state.error}\r\n            modalClosed={this.errorConfirmedHandler}\r\n          >\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Aux>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import axios from \"axios\";\r\n\r\n//create a new instance of axios with a custom config/ custom axios-:\r\nconst instance = axios.create({\r\n  baseURL: \"https://react-my-burger-3132.firebaseio.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { Component } from \"react\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport Aux from \"../../hoc/Auxx\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport axios_orders from \"../../axios-orders\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 5,\r\n  cheese: 20,\r\n  meat: 65,\r\n  bacon: 30,\r\n};\r\nclass BurgerBuilder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ingredients: null,\r\n      totalPrice: 20,\r\n      purchasable: false,\r\n      purchasing: false,\r\n      loading: false,\r\n      error: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios_orders\r\n      .get(\"https://react-my-burger-3132.firebaseio.com/ingredients.json\")\r\n      .then((response) => {\r\n        this.setState({ ingredients: response.data });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: true });\r\n      });\r\n  }\r\n\r\n  updatePurchaseState = (updatedIngredientsObject) => {\r\n    const SUM = Object.keys(updatedIngredientsObject)\r\n      .map((ingredientKey) => {\r\n        return updatedIngredientsObject[ingredientKey];\r\n      })\r\n      .reduce((sum, ele) => {\r\n        return sum + ele;\r\n      }, 0);\r\n\r\n    this.setState({ purchasable: SUM > 0 });\r\n  };\r\n\r\n  addIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCounted = oldCount + 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients,\r\n    };\r\n    updatedIngredients[type] = updatedCounted;\r\n    const oldPrice = this.state.totalPrice;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const newPrice = oldPrice + priceAddition;\r\n\r\n    this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\r\n\r\n    this.updatePurchaseState(updatedIngredients);\r\n  };\r\n  removeIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount > 0) {\r\n      const updatedCounted = oldCount - 1;\r\n      const updatedIngredients = {\r\n        ...this.state.ingredients,\r\n      };\r\n      updatedIngredients[type] = updatedCounted;\r\n      const oldPrice = this.state.totalPrice;\r\n      const priceDeduction = INGREDIENT_PRICES[type];\r\n      const newPrice = oldPrice - priceDeduction;\r\n\r\n      this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\r\n\r\n      this.updatePurchaseState(updatedIngredients);\r\n    }\r\n  };\r\n\r\n  purchaseHandler = () => {\r\n    this.setState({ purchasing: true });\r\n  };\r\n  purchaseCancleHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n  purchaseContinueHandler = () => {\r\n    // this.setState({ loading: true }); //loading spinner On.\r\n    // const orderData = {\r\n    //   ingredients: this.state.ingredients,\r\n    //   price: this.state.totalPrice,\r\n    //   customer: {\r\n    //     name: \"Luki Lee\",\r\n    //     address: {\r\n    //       street: \"6th cross road\",\r\n    //       zipCode: \"67950\",\r\n    //       city: \"Bangalore\",\r\n    //       country: \"India\",\r\n    //     },\r\n    //     email: \"lukilee@gmail.com\",\r\n    //   },\r\n    //   deliveryMethod: \"fastest\",\r\n    // };\r\n\r\n    // //'order' data which send to this path-:\r\n    // axios_orders\r\n    //   .post(\"/orders.json\", orderData)\r\n    //   .then((response) => {\r\n    //     //loading spinner off\r\n    //     this.setState({ loading: false, purchasing: false });\r\n    //     console.log(`sent data: ${response}`);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     //loading spinner off\r\n    //     this.setState({ loading: false, purchasing: false });\r\n    //     console.log(`Error: ${error}`);\r\n    //   });\r\n\r\n    const queryParams = [];\r\n    for (let i in this.state.ingredients) {\r\n      queryParams.push(\r\n        encodeURIComponent(i) +\r\n          \"=\" +\r\n          encodeURIComponent(this.state.ingredients[i])\r\n      );\r\n    }\r\n    queryParams.push('price=' + this.state.totalPrice)\r\n    const queryString = queryParams.join(\"&\");\r\n\r\n    this.props.history.push({\r\n      //switch the page or push a new page onto the history stack.\r\n      pathname: \"/checkout\",\r\n      search: \"?\" + queryString,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.state.ingredients,\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0; //true or false\r\n    }\r\n\r\n    let Order_Summary = null;\r\n\r\n    let burger = this.state.error ? (\r\n      <p>Ingredients can not be loaded!</p>\r\n    ) : (\r\n      <Spinner />\r\n    );\r\n\r\n    if (this.state.ingredients !== null) {\r\n      //ingredients is not null\r\n      burger = (\r\n        <Aux>\r\n          <Burger IngredientsObj={this.state.ingredients} />\r\n          <BuildControls\r\n            ingredientAdded={this.addIngredientHandler}\r\n            ingredientRemoved={this.removeIngredientHandler}\r\n            disabled={disabledInfo}\r\n            price={this.state.totalPrice}\r\n            IsPurchasable={this.state.purchasable}\r\n            ordered={this.purchaseHandler}\r\n          />\r\n        </Aux>\r\n      );\r\n      Order_Summary = (\r\n        <OrderSummary\r\n          ingredients={this.state.ingredients}\r\n          purchaseCancled={this.purchaseCancleHandler}\r\n          purchaseContinued={this.purchaseContinueHandler}\r\n          TP={this.state.totalPrice}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.state.loading === true) {\r\n      //loading spinner On\r\n      Order_Summary = <Spinner />;\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal\r\n          show={this.state.purchasing}\r\n          modalClosed={this.purchaseCancleHandler}\r\n        >\r\n          {Order_Summary}\r\n        </Modal>\r\n        {burger}\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios_orders);\r\n","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport \"./CheckoutSummary.css\";\r\n\r\nconst CheckoutSummary = (props) => {\r\n  return (\r\n    <div className=\"CheckoutSummary\">\r\n      <h1>We hope it tastes well!</h1>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Burger IngredientsObj={props.ingredients} />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n        CONTINUE\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [\"InputElement\"];\r\n\r\n  if(props.invalid && props.shouldValidate && props.touched){//true\r\n      inputClasses.push(\"Invalid\")\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed} //The onChange() event occurs when the value of an element has been changed.\r\n        />\r\n      );\r\n      break;\r\n\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(' ')}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <div className=\"Input\">\r\n      <label className=\"Label\">{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport \"./ContactData.css\";\r\nimport axios_orders from \"../../../axios-orders\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\n\r\nexport default class ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Name\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Street\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      zipCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Zip Code\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      country: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Country\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Email\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"fastest\", displayValue: \"Fastest\" },\r\n            { value: \"cheapest\", displayValue: \"Cheapest\" },\r\n          ],\r\n        },\r\n        value: \"fastest\",//default value\r\n        validation: {},\r\n        valid: true,\r\n      },\r\n    },\r\n\r\n    formIsValid: false,\r\n    loading: false,\r\n  };\r\n\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.setState({ loading: true }); //loading spinner On.\r\n\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[\r\n        formElementIdentifier\r\n      ].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.price,\r\n      orderData: formData,\r\n    };\r\n\r\n    //'order' data which send to this path-:\r\n    axios_orders\r\n      .post(\"/orders.json\", order)\r\n      .then((response) => {\r\n        //loading spinner off\r\n        this.setState({ loading: false });\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        //loading spinner off\r\n        this.setState({ loading: false });\r\n        console.log(`Error: ${error}`);\r\n      });\r\n  };\r\n\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    return isValid; //true\r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    //console.log(event.target.value);\r\n\r\n    const updatedOrderForm = {\r\n      ...this.state.orderForm,\r\n    };\r\n    const updatedFormElement = { ...updatedOrderForm[inputIdentifier] };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.valid = this.checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.touched = true;\r\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n\r\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key],\r\n      });\r\n    }\r\n\r\n    //The onSubmit() event occurs when a form is submitted.\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map((formElement) => (\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid} //boolean value\r\n            shouldValidate={formElement.config.validation} //boolean value\r\n            touched={formElement.config.touched} //boolean value\r\n            changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n          />\r\n        ))}\r\n        <Button\r\n          btnType=\"Success\"\r\n          disabled={!this.state.formIsValid}\r\n          clicked={this.orderHandler}\r\n        >\r\n          ORDER\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.state.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className=\"ContactData\">\r\n        <h4>Enter your contact data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\n\r\nexport default class Checkout extends Component {\r\n  state = {\r\n    ingredients: null,\r\n    totalPrice: 0,\r\n  };\r\n\r\n  componentWillMount() {\r\n    const query = new URLSearchParams(this.props.location.search);\r\n    const ingredients = {};\r\n    let price = 0;\r\n\r\n    for (let param of query.entries()) {\r\n      //['salad', '1]\r\n      if (param[0] === \"price\") {\r\n        price = param[1];\r\n      } else {\r\n        ingredients[param[0]] = +param[1];\r\n      }\r\n    }\r\n\r\n    this.setState({ ingredients: ingredients, totalPrice: price });\r\n  }\r\n\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack(); //simply goes back to the last page.\r\n  };\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace(\"/checkout/contact-data\"); // Replaces the current entry on the history stack.\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CheckoutSummary\r\n          ingredients={this.state.ingredients}\r\n          checkoutCancelled={this.checkoutCancelledHandler}\r\n          checkoutContinued={this.checkoutContinuedHandler}\r\n        />\r\n        <Route\r\n          path={this.props.match.path + \"/contact-data\"}\r\n          render={(props) => (\r\n            <ContactData\r\n              ingredients={this.state.ingredients}\r\n              price={this.state.totalPrice}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Order.css\";\r\n\r\nconst Order = (props) => {\r\n  const ingredients = [];\r\n\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName],\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map((ig) => {\r\n    return (\r\n      <span\r\n        key={ig.name}\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          fontWeight: \"bold\",\r\n          display: \"inline-block\",\r\n          margin: \"1px 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\",\r\n        }}\r\n      >\r\n        {ig.name}: {ig.amount}\r\n      </span>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"Order\">\r\n      <p>Ingredients:- {ingredientOutput}</p>\r\n      <p>\r\n        Price:- <strong>₹{Number.parseFloat(props.price).toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios_orders from \"../../axios-orders\";\r\n\r\nclass Orders extends Component {\r\n  state = {\r\n    orders: [],\r\n    loading: true,\r\n  };\r\n  componentDidMount() {\r\n    //https://react-my-burger-3132.firebaseio.com/orders.json\r\n    axios_orders\r\n      .get(\"/orders.json\")\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const fetchedOrders = [];\r\n        for (let key in res.data) {\r\n          fetchedOrders.push({ ...res.data[key], id: key });\r\n        }\r\n        this.setState({ loading: false, orders: fetchedOrders });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.orders.map((order) => (\r\n          <Order\r\n            key={order.id}\r\n            ingredients={order.ingredients}\r\n            price={order.price}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n          </Switch>\n\n          {/* <BurgerBuilder /> */}\n          {/* <Checkout /> */}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const ADD_INGREDIENTS = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENT';\r\n\r\n\r\n\r\n","import * as actionTypes from \"./actions\";\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 20,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENTS:\r\n      return {};\r\n\r\n    case actionTypes.REMOVE_INGREDIENTS:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport {createStore} from 'redux';\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reducer from './store/reducer'\n\nconst store = createStore(reducer);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n"],"sourceRoot":""}